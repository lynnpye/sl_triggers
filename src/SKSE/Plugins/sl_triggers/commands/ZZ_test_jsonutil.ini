deb_msg "SLT Test: jsonutil"
util_getrealtime
set $9001 $$
deb_msg "Start realtime: " $9001
set $8000 0

goto begintestpath

[done]
deb_msg "SLT Test Script 2: End"
util_getrealtime
set $9002 $$
deb_msg "Ending realtime: " $9002
set $9003 $9002 - $9001
deb_msg "Elapsed realtime: " + $9003
deb_msg "Passed " $8000 " tests."
return




[begintestpath]
set $1 "../sl_triggers/commandstore/jsonutil_function_test"

jsonutil exists $1

if $$ = 1  existsworks
deb_msg "FAILED: exists :" $$ ":  :" $1 ":"
goto done


[existsworks]
inc $8000

jsonutil set $1 "key1" "string" "avalue"
if $$ = "avalue"  setworks
deb_msg "FAILED: set"
goto done


[setworks]
inc $8000

jsonutil has $1 "key1" "string"
if $$ = 1  hasworks
deb_msg "FAILED: has"


[hasworks]
inc $8000

jsonutil unset $1 "key1" "string"
if $$ = 1  unsetworks
deb_msg "FAILED: unset"
goto done


[unsetworks]
inc $8000

jsonutil has $1 "key1" "string"
if $$ = 0  hasalsoworks
deb_msg "FAILED: unset or has failed, still reports set"
goto done


[hasalsoworks]
inc $8000

jsonutil set $1 "key1" "float" "87"
if $$ = 87  setfloatworks
deb_msg "FAILED: set float :" $$ ":"
goto done


[setfloatworks]
inc $8000


jsonutil has $1 "key1" "string"
if $$ = 0  hasstillworks
deb_msg "FAILED: has failed, crossed the streams float and string?"
goto done



[hasstillworks]
inc $8000

jsonutil listclear $1  "somelist" "int"

jsonutil listadd $1  "somelist"  "int"  1
jsonutil listadd $1  "somelist"  "int"  2
jsonutil listadd $1  "somelist"  "int"  3
jsonutil listadd $1  "somelist"  "int"  1

jsonutil listcount $1 "somelist" "int"
if $$ = 4  listcountworked
deb_msg "FAILED: honestly, listclear, listadd, and listcount are all suspect"
goto done


[listcountworked]
inc $8000


jsonutil save $1

goto done