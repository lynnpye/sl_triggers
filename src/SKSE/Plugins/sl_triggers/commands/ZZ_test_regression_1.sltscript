deb_msg "SLT Test Script: Begin"
util_getrealtime
set $9001 $$
deb_msg "Start realtime: " $9001
set $8000 0

set $accumulatedUtilWaitTime 0

if $8000 != 0 setdidfail
goto begintestpath
[setdidfail]
deb_msg "Set failed, $8000 should be 0 but it is not:"
deb_msg $8000
deb_msg ": going to done"
goto done


[begintestpath]
set $34 29

inc $34 1

if $34 = 30 incworked
deb_msg "FAILED: inc"
goto done


[incworked]
inc $8000 1

set $rnd100 -12.0

if $rnd100 == -12.0 randosetworked
deb_msg $"FAILED: rnd100 should have been set to -12.0, got value :{rnd100}:"
goto done

[randosetworked]
set $rnd100 $system.random.100

deb_msg $"INFO: rnd100 is :{rnd100}:"

if $rnd100 >= 0.0 rando1worked

deb_msg $"FAILED: rnd100 should be greater than or equal to 0.0, got value :{rnd100}:"
goto done

[rando1worked]
if $rnd100 <= 100.0 randoworked

deb_msg $"FAILED: rnd100 should be less than or equal to 100.0, got value :{rnd100}:"
goto done

deb_msg $"INFO:  random.100:{system.random.100} inside:{system.is_player.inside}  outside:{system.is_player.outside}  realtime:{system.realtime}  gametime:{system.gametime}   player:{system.player}  sessionid:{system.sessionid}  initialScriptName:{system.initialScriptName}  initialGameTime:{system.initialGameTime}"

[randoworked]
inc $8000 1


set $anEditorId "Ale"

set $aleForm resultfrom form_getbyid $anEditorId

set $aleName resultfrom form_dogetter $aleForm GetName

if $aleName == "Ale" editoridlookupworked
deb_msg "FAILED: editoridlookup"
goto done


[editoridlookupworked]
inc $8000


set $avalue "$this will still be hard"

deb_msg ":" $avalue ":"



[dollarprefixworked]
inc $8000


; test goto
goto gotoworked
deb_msg "FAILED: goto"
goto done ; hahahaha :)

[doactualtests]


set $eq1 23.7
set $eq2 23.7000

if $eq1 == $eq2 cp42.1
deb_msg "FAILED: == or new eq/1"
goto done

[cp42.1]

set $eq3 "23.70"

if $eq1 == $eq3 cp42.2
deb_msg "FAILED: == or new eq/2"
goto done

[cp42.2]

set $eq4 "Hello world1"
set $eq5 "Hello world2"

if $eq4 &!= $eq5 new_eq_worked
deb_msg "FAILED: == or new eq/3"
goto done

[new_eq_worked]
inc $8000

; test set
set $1 40
set $2 40
; test if
if $1 = $2 setworked
deb_msg "FAILED: set or if"
goto done

[setworked]
inc $8000

actor_dogetter $system.player IsSneaking
set $isSneaking $$

actor_doaction $system.player StartSneaking
actor_dogetter $system.player IsSneaking
set $nowSneaking $$

if $isSneaking != $nowSneaking ckapichk1
deb_msg "FAILED: issneaking or startsneaking"
goto done

[ckapichk1]
actor_doaction $system.player StartSneaking
actor_dogetter $system.player IsSneaking
set $nowSneaking $$

if $isSneaking = $nowSneaking ckapiworked
deb_msg "FAILED: startsneaking"
goto done


[ckapiworked]
inc $8000




actor_display_name $system.player
set $bar1 $$

set $bar2 ""

if $bar1 &!= $bar2 srfw1
deb_msg "FAILED: set resultfrom/1 bar1:" $bar1 ":  bar2:" $bar2 ":"
goto done

[srfw1]

set $bar2 resultfrom actor_display_name $system.player

if $bar1 &= $bar2 srfw2
deb_msg "FAILED: set resultfrom/2 bar1:" $bar1 ":  bar2:" $bar2 ":"
goto done

[srfw2]

av_get $system.player Health
set $foo1 $$

set $foo2 0

if $foo1 != $foo2 srfw3
deb_msg "FAILED: set resultfrom/3 foo1:" $foo1 ":  foo2:" $foo2 ":"
goto done

[srfw3]

set $foo2 resultfrom av_get $system.player Health

if $foo1 = $foo2 setresultfromworked
deb_msg "FAILED: set resultfrom/4 foo1:" $foo1 ":  foo2:" $foo2 ":"
goto done



[setresultfromworked]
inc $8000

actor_display_name $system.player
set $playerDisplayName $$

actor_dogetter $system.player GetDisplayName
set $playerGetterDisplayName $$

if $playerDisplayName = $playerGetterDisplayName actor_dogetterworked
deb_msg "FAILED: actor_dogetter :" $playerGetterDisplayName ":  should have:" $playerDisplayName ":"
goto done


[actor_dogetterworked]
inc $8000 1
set $2 50
if $1 < $2 ltworked
deb_msg "FAILED: lt"
goto done

[ltworked]
inc $8000 1
if $2 > $1 gtworked
deb_msg "FAILED: gt"
goto done

[gtworked]
inc $8000 1
if $1 != $2 neqworked
deb_msg "FAILED: neq"
goto done

[neqworked]
inc $8000 1
gosub set1to90
if $1 = 90 gosubworked
deb_msg "FAILED: gosub"
goto done

[gosubworked]
inc $8000 1
set $1 0
av_get $system.player Health
set $1 $$
if $1 != 0 avgetworked
deb_msg "FAILED: av_get"
goto done


[avgetworked]
inc $8000 1




rnd_int 12 87
set $1 $$
if $1 > 11 rndgood1
deb_msg "FAILED: rnd_int/1 12 87 (" $1 ")"
goto done

[rndgood1]
if $1 < 88 rndintworked
deb_msg "FAILED: rnd_int/2 12 87 (" $1 ")"
goto done


[rndintworked]
inc $8000 1



rnd_list "one" "two"
set $1 $$

if $1 &= "one" gotone
if $1 &= "two" gottwo
deb_msg "FAILED: rnd_list 'one' 'two' (" $1 ")"
goto done

[gotone]
[gottwo]
inc $8000 1

deb_msg "Just prior to call, test pass count: " $8000

set $global.testvar "One bad day"

deb_msg "global.testvar:" $global.testvar ": should be :One bad day:"

set $target.tarvar "Two bad days"

deb_msg "target.tarvar:" $target.tarvar ": should be :Two bad days:"

deb_msg "global.randomvariable (" $global.randomvariable ")"

set $global.randomvariable "horked up"

deb_msg "global.randomvariable (" $global.randomvariable ")"

call "CallExample"

if $global.randomvariable = "Gosub global" callworked
deb_msg "FAILED: call (" $global.randomvariable ")"
goto done

[callworked]
inc $8000 1

deb_msg "Call working makes me very happy"





util_getrealtime
set $5 $$

inc $accumulatedUtilWaitTime 5.5
util_wait 5.5
util_getrealtime
set $6 $$ - $5

if $6 > 5.0 waitpassone
deb_msg "FAILED: util_wait/1 5.5 (" $6 ")"
goto done

[waitpassone]
if $6 < 10.0 waitworked
deb_msg "FAILED: util_wait/2 5.5 (" $6 ")"
goto done


[waitworked]
inc $8000 1



set $global.randomvariable ""
msg_notify "ABOUT TO SEND MODEVENT FOR GOSUBEXAMPLE SO EXPECT TO SEE IT COME UP AGAIN"
util_sendmodevent "sl_triggers_SLTRequestCommand" "GosubExample" 0

inc $accumulatedUtilWaitTime 7.0
util_wait 7.0

msg_notify "YOU REALLY OUGHT TO HAVE SEEN A BUNCH OF NOTIFICATIONS BY NOW FROM GOSUBEXAMPLE"

if $global.randomvariable = "Gosub global" sendmodeventworked
deb_msg "FAILED: send_modevent g1("  $global.randomvariable  ")"
goto done





[sendmodeventworked]
inc $8000 1


util_getrandomactor 10000

actor_isvalid $system.actor

if $$ = 1 getrandomactorworked1
deb_msg "FAILED: util_getrandomactor response not a valid actor"
goto done

[getrandomactorworked1]

actor_isplayer $system.actor

if $$ != 1 getrandomactorworked
deb_msg "FAILED: util_getrandomactor found player"
goto done


[getrandomactorworked]
inc $8000 1








goto done

[gotoworked]
inc $8000 1
goto doactualtests

beginsub set1to90
    set $1 90
endsub

[done]
deb_msg "SLT Test Script: End"
util_getrealtime
set $9002 $$
deb_msg "Ending realtime: " $9002
set $9003 $9002 - $9001
deb_msg "Elapsed realtime: " + $9003
deb_msg $"Manually counted: util_wait: {accumulatedUtilWaitTime} seconds mandated by tests"
set $actualElapsedRealtime $9003 - $accumulatedUtilWaitTime
deb_msg $"Actual elapsed realtime (minus util_wait): {actualElapsedRealtime}"
deb_msg $"Passed {8000} tests."